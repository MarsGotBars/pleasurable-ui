:root {
    interpolate-size: allow-keywords; 
}

body {
    background-color: var(--background-color);
}

header {
    width: 100%;
    background-color: var(--background-color-lighter);
    padding: var(--md);

    div {
        display: grid;
        grid-template-columns: auto 1fr;
        grid-template-rows: repeat(2, 1fr);
        padding: 1em;
        width: fit-content;
        transform: translateX(-1em);
        margin: 0 auto;

        a {
            place-self: center;
            margin-right: 1rem;
        }
        .back-arrow:hover {
            svg {
                transform: scale(1.3);
                
            }
        }
    }
    
    p {
        color: var(--text-color-darker);
        max-width: 60ch;
        grid-column: 2;

        span {
            color: var(--text-color);
            font-weight: 700;
        }
    }

    h1 {
        font-size: clamp(2.125rem, 6vw, var(--xl));
    }
}



/* MARK: drops styling */
main {
        background-image:
            radial-gradient(
                circle at -10em 50%,
                var(--accent-color),
                transparent 30em),
            radial-gradient(
                circle at calc(100% + 10em) 50%,
                var(--accent-color),
                transparent 30em);
    background-attachment: fixed;
        padding-bottom: 1rem;
}

h2 {
    padding: 1em;
    text-align: center;
}

.drops-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 0 var(--md) var(--md);
    list-style: none;
}

.drop-content {
    background-color: var( --background-color-lighter);
    border-radius: 1.25rem;
    overflow: clip;
    display: flex;
    max-width: 75ch;
    margin: 0 auto;
    width: 100%;
    padding: var(--sm);
    
    display: flex;
    line-height: 1.5;

    .user-avatar {
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: .75rem;
        color: var(--text-color);
        font-family: var(--primary-font);
    }

    .drop-date {
        color: var(--text-color);
        font-family: var(--secondary-font);
        font-style: italic;
    }
}

.drop-item > * {
    padding: 1em;
}



/* MARK: dialog + form 
*/
dialog {
    --offset: 25vh;
    position: relative;
    
    background-color: var(--background-color);
    border: none;
    border-radius: var(--border-radius);
    position: fixed;
    height: calc(100vh - var(--offset));
    width: 100vw;
    top: var(--offset);
    padding: 2rem;
    max-width: 100vw;
    
    @media (min-width: 760px ) {
        top: calc(var(--offset) / 2 );
        margin: 0 auto;
        max-width: 41.25rem;
    }
    
    form {
        display: flex;
        flex-direction: column;
        color: var(--text-color);

        h3 {
            padding-bottom: var(--xs);
        }

        label {
            width: fit-content;
            font-family: var(--secondary-font);
            display: flex;
            padding-bottom: var(--sm);
            cursor: pointer;
        }

        label:nth-of-type(1) {
            width: 100%;
            display: flex;
            flex-direction: column;
        }

        textarea {
            width: 100%;
            height: 13rem;
            background-color: var(--background-color-lighter);
            border: none;
            resize: none;
            border-radius: var(--border-radius);
            margin-top: var(--sm);
        }

        input[type="checkbox"] {
            cursor: pointer;
            appearance: none;
            
            &:focus-visible {
                outline: none;
            }
        }

        .fake-checkbox {
            width: 1rem;
            height: 1rem;
            border-radius: .25rem;
            border: var(--border);
            margin-right: var(--xs);
            display: grid;
            place-content: center;
            svg.checkmark-icon {
                opacity: 0;
            }
        }

        input[type="checkbox"]:checked + .fake-checkbox {
            background-color: var(--button-color);
            outline: .5px solid var(--accent-color);

            svg.checkmark-icon {
                opacity: 1;
                position: initial;
            }
        }

        .submission-container {
            display: flex;
        }
    }
}

/* MARK: Form state overlay and transitions */
form[data-enhanced="form"]::after {
    content: "";
    display: block;
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--background-color-lighter);
    pointer-events: none;
    z-index: 2;
    transition: 0.5s ease-out;
}

form[data-enhanced="form"] svg {
    transition: 0.5s ease-out;
    transition-delay: 0.2s;
}

.loading-overlay {
    z-index: 5;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1.5rem;
    opacity: 0;
    pointer-events: none;
}

.loading-overlay svg {
    margin: 0;
    height: 5rem;
    width: unset;
    aspect-ratio: 1;
}

.loading-overlay .success-icon svg {
    height: 4rem;
    width: 4rem;
    color: var(--accent-color);
}

.loading-overlay .loading-spinner {
    opacity: 0;
    pointer-events: none;
    position: absolute;
}

.loading-overlay .success-icon {
    opacity: 0;
    pointer-events: none;
    position: absolute;
}

.loading-overlay p.loading-text,
.loading-overlay p.success-text,
.loading-overlay p.error-text {
    opacity: 0;
    pointer-events: none;
    position: absolute;
}

/* Loading state */
form[data-state="loading"] .loading-overlay {
    opacity: 1;
    pointer-events: auto;
}

form[data-state="loading"] .loading-overlay .loading-spinner {
    opacity: 1;
    pointer-events: auto;
    position: initial;
}

form[data-state="loading"] .loading-overlay .success-icon {
    opacity: 0;
    pointer-events: none;
    position: absolute;
}

form[data-state="loading"] .loading-overlay p.loading-text {
    opacity: 1;
    pointer-events: auto;
    position: initial;
}

form[data-state="loading"]::after {
    opacity: 1;
    pointer-events: auto;
}

/* Success state */
form[data-state="succes"] .loading-overlay,
form[data-state="success"] .loading-overlay {
    opacity: 1;
    pointer-events: auto;
}

form[data-state="succes"] .loading-overlay p.success-text,
form[data-state="success"] .loading-overlay p.success-text,
form[data-state="succes"] .loading-overlay .success-icon,
form[data-state="success"] .loading-overlay .success-icon {
    opacity: 1;
    pointer-events: auto;
    position: initial;
}

form[data-state="succes"]::after,
form[data-state="success"]::after {
    opacity: 1;
    pointer-events: auto;
}

/* Error state */
form[data-state="error"] .loading-overlay {
    opacity: 1;
    pointer-events: auto;
}

form[data-state="error"] .loading-overlay p.error-text {
    opacity: 1;
    pointer-events: auto;
    position: initial;
    color: var(--accent-color-two);
    font-size: var(--md);
}

form[data-state="error"]::after {
    opacity: 1;
    pointer-events: auto;
}

/* Loading spinner animation */
form[data-state="loading"] .loading-overlay svg {
    animation: loading-spinner 1.5s cubic-bezier(0.28, 0, 0.365, 1) infinite;
}

input[type="text"], textarea {
    color: var(--text-color);
    white-space: normal;
    padding: var(--sm);
    font-family: var(--secondary-font);
}

dialog::backdrop {
    background: rgba(0, 0, 0, 0.5);
}

.submission-container {
    display: flex;
    justify-content: center;
    gap: .5rem;
    
    .closing-button,
    .submit-button {
        color: var(--text-color);
        padding: .75rem 1rem;
        font-family: var(--secondary-font);
        font-size: var(--sm);

        &:hover {
            background-color: var(--accent-color);
        }
    }
    
    .closing-button {
        background-color: var(--background-color);
        border: .0625rem solid var(--button-color);
        border-radius: var(--border-radius);
        display: flex;
        gap: .5rem;
    }

    .submit-button {
        background-color: var(--button-color);
    }
}

/* MARK: plaats bericht button hover
 */
.post-btn {
    background-color: var(--button-color);
    border-radius: var(--border-radius);
    padding: var(--xs) var(--sm);
    position: fixed;
    bottom: 10vh;
    left: 50%;
    transform: translateX(-50%);
    width: max-content;
    overflow: hidden;

    span {
        position: relative;
        z-index: 20;
    }

}

.post-btn:hover::before {
    width: 100%;
}

.post-btn::before {
    content: "";
    background-color: var(--button-hover);
    width: 0;
    height: 100%;
    transition: width .3s;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
}



button {
.user-details {
    display: flex;
    flex-direction: column;
}
}

.post-btn {
    background-color: var(--button-color);
    border-radius: var(--border-radius);
    padding: var(--xs) var(--sm);
    position: fixed;
    bottom: 10vh;
    left: 50%;
    transform: translateX(-50%);
    width: max-content;
}

.drop-date {
    color: var(--text-color);
}

.drop-content {
    line-height: 1.5;
}

.loading-overlay svg.loading-spinner {
    animation: loading-spinner 1.5s cubic-bezier(0.28, 0, 0.365, 1) infinite;
}
svg foreignObject div {
    background: conic-gradient(
              from 90deg,
              var(--button-color) 0deg,
              rgba(100, 170, 199, 0) 360deg
            );
            height: 100%;
            width: 100%;
            opacity: 1;
}

@keyframes loading-spinner {
    to {
        transform: rotate(360deg);
    }
}

/* MARK: animation
 */

.new-drop-animation {
    animation: new-drop-added 1s forwards;
    overflow: hidden;
    background-color: var(--button-color);
}

@keyframes new-drop-added {
    0% {
        height: 0;
    }
    30% {
        height: auto;
    }
    40% {
        background-color: var(--button-color);
    }
    100% {
        background-color: var(--background-color-lighter);
    }
}